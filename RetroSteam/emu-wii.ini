
; The interesting thing here is that I want to reference my roms with relative paths, but I've divided them into
; multiple folders, including wii, gcn, wad and vc. I need to filter using my RomRegex to only get things
; in the wii and gc folders, but that requires using parantheses around text that I don't want to capture.
; Thus, noncapturing groups. As explained earlier, (?:) lets you put parentheses around words without including
; them in your title
; 
; A second way to handle it is to use explicit capture. In fact, I may have changed everything
; since I wrote this so that ONLY explicit capture using the name <title> will get you the rom
; title. Explicit capture of the title looks like (?<title>......), where the dots are the regex
; that matches the title.
;
; Finally, you can make the title just be your filename, minus path and extension, using %n.
; If you do that, there's no need to do any title capturing. Title capturing is for when you
; have something more complicated, like if the rom name is in the directory, or if the filename
; includes other stuff in it that you don't want in the title. In the sample below, I use both
; title capture AND %n. To use the capture title, use %T instead of %n.
;
; Another interesting thing here is that I use %R, which gets the rom's path relative to the
; rom base. So, instead of "bar.iso", it will look like "wii\bar.iso". We need that since our StartIn
; is the base roms directory, and roms can be in either the vc or wii directories.
; This config is probably tied with wii u as most complicated, but really, if you organize your files 
; differently from me it will be less complicated.
[2c. Wii]
Executable=E:\Emulation\wii\emulators\dolphin\Dolphin.exe
StartIn=E:\Emulation\wii\roms
Parameters=-e "%p"
RomBasePath=E:\Emulation\wii\roms
RomRegex=((wii)|(vc))\\(?<title>[^\\]+)\.((elf)|(dol)|(iso)|(wbfs)|(wad)|(gcz))$
TitlePattern=%n (WII)
ImageBasePath= 
ImageFile=
ImageRegex=
